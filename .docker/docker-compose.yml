version: '3.9'
services:
  db_2:
    container_name: db_2
    image: postgres
    restart: always
    environment:
      - POSTGRES_MULTIPLE_DATABASES=qwizer_be,qwizer_test
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=root
    ports:
      - '5432:5432'
    healthcheck:
      test: echo $$POSTGRES_MULTIPLE_DATABASES | tr -d '"\r\n' | xargs -d ',' -n1 pg_isready -d
      interval: 5s
      timeout: 5s
      retries: 20
    volumes:
      - ./db/create-multiple-postgresql-databases.sh:/docker-entrypoint-initdb.d/init.sh
      - pg_data:/var/lib/postgresql/data

  nginx:
    image: nginx:latest
    restart: unless-stopped
    ports:
      - 80:80
      - 443:443
    depends_on:
      - front
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl/site.crt:/etc/ssl/certs/site.crt
      - ./nginx/ssl/site.key:/etc/ssl/private/site.key
      - back:/static
      - front:/dist

  back:
    build: 
      context: ../
      dockerfile: ./.docker/back/Dockerfile
    depends_on:
      db_2:
        condition: service_healthy
    # ports:
    #   - '8000:8000'
    environment:
      - DEBUG=False
      - DATABASE_HOST=db_2
    volumes:
      - back:/app/staticfiles

  front:
    build: 
      context: ../
      dockerfile: ./.docker/front/Dockerfile
    # depends_on:
    #   - back
    environment:
      - REACT_APP_API_URL=api
      - REACT_PORT=3000 #Vite
      - REACT_HOST=0.0.0.0
    # ports:
    #   - "3000:3000"
    volumes:
      - front:/app/dist

volumes:
  pg_data:
  back:
  front:
