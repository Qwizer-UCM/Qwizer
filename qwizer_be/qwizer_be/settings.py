"""
Django settings for qwizer_be project.

Generated by 'django-admin startproject' using Django 4.1.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""

from pathlib import Path
import os
import environ

env = environ.Env()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
environ.Env.read_env(os.path.join(BASE_DIR, ".env"))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = env.str("SECRET_KEY")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = env.bool("DEBUG")
SHELL_PLUS_IMPORTS = ["from api.serializer import *"]

ALLOWED_HOSTS = env.list("ALLOWED_HOSTS")

# Static files (CSS, JavaScript, Images)
# STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, "staticfiles")

# Application definition
BASE_APPS = ["django.contrib.admin", "django.contrib.auth", "django.contrib.contenttypes", "django.contrib.sessions", "django.contrib.messages", "django.contrib.staticfiles"]

LOCAL_APPS = [
    "api",
]

THIRD_PARTY_APPS = [
    "import_export",
    "django_createuser",
    "corsheaders",  # TODO Por qué??? ELIMINARLOS ANTES DE LA ENTREGA FINAL PORQUE ES UNA VULNERABILIDAD
    "rest_framework",
    "rest_framework.authtoken",
    "django_extensions",
    "djoser",
    "drf_spectacular",
    "drf_spectacular_sidecar",
]

INSTALLED_APPS = BASE_APPS + LOCAL_APPS + THIRD_PARTY_APPS


MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    # Lo nuevo que he añadido
    "corsheaders.middleware.CorsMiddleware",
]

AUTH_USER_MODEL = "api.User"

AUTHENTICATION_BACKENDS = ["django.contrib.auth.backends.ModelBackend"]


ROOT_URLCONF = "qwizer_be.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "qwizer_be.wsgi.application"


# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases


# TODO Se deberia crear un .env para esto y no subir al repositorio credenciales (incluir tambien la secret_key)
# https://djangocentral.com/environment-variables-in-django/
DATABASES = {
    "default": {
        "ENGINE": env.str("DATABASE_ENGINE"),
        "NAME": env.str("DATABASE_NAME"),
        "USER": env.str("DATABASE_USER"),
        "PASSWORD": env.str("DATABASE_PASSWORD"),
        "HOST": env.str("DATABASE_HOST"),
        "PORT": env.int("DATABASE_PORT"),
    }
}

# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

STATIC_URL = "/static/"

REST_FRAMEWORK = {
    "DEFAULT_AUTHENTICATION_CLASSES": ["rest_framework.authentication.TokenAuthentication"],
    "DEFAULT_SCHEMA_CLASS": "drf_spectacular.openapi.AutoSchema",
}


# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

CORS_ALLOW_ALL_ORIGINS = env.bool("CORS_ALLOW_ALL_ORIGINS")
CORS_ORIGIN_WHITELIST = env.list("CORS_ORIGIN_WHITELIST")
CSRF_TRUSTED_ORIGINS = env.list("CSRF_TRUSTED_ORIGINS")

SPECTACULAR_SETTINGS = {
    "TITLE": "Student API",
    "DESCRIPTION": "This is a student official API documentation.",
    "VERSION": "1.0.0",
    "SERVE_INCLUDE_SCHEMA": False,
    "SCHEMA_PATH_PREFIX": r"/api/",
    "TAGS": [
        {"name": "auth", "description": "Autenticación de usuarios"},
        {"name": "estudiantes", "description": "Estudiantes"},
        {"name": "qr", "description": "Qr"},
        {"name": "question", "description": "Preguntas"},
        {"name": "subject", "description": "Asignaturas"},
        {"name": "test", "description": "Cuestionarios"},
    ],
    "SWAGGER_UI_SETTINGS": {
        "docExpansion": "none",
        "persistAuthorization": True,
        "tryItOutEnabled": True,
        "displayOperationId": True,
    },
    "REDOC_UI_SETTINGS": {
        "jsonSampleExpandLevel": "all",
    },
    "SWAGGER_UI_DIST": "SIDECAR",  # shorthand to use the sidecar instead
    "SWAGGER_UI_FAVICON_HREF": "SIDECAR",
    "REDOC_DIST": "SIDECAR",
    "SORT_OPERATION_PARAMETERS": False
    # OTHER SETTINGS
}

IMPORT_EXPORT_USE_TRANSACTIONS = True
