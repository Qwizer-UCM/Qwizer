# Generated by Django 4.1 on 2023-01-28 13:53

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        max_length=255, unique=True, verbose_name="email address"
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=30, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("student", "student"),
                            ("teacher", "teacher"),
                            ("admin", "admin"),
                        ],
                        max_length=7,
                        verbose_name="role",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Asignatura",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "nombreAsignatura",
                    models.CharField(
                        blank=True,
                        max_length=254,
                        unique=True,
                        verbose_name="nombreAsignatura",
                    ),
                ),
            ],
            options={
                "ordering": ["nombreAsignatura"],
            },
        ),
        migrations.CreateModel(
            name="Cuestionario",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "titulo",
                    models.CharField(blank=True, max_length=100, verbose_name="titulo"),
                ),
                ("duracion", models.IntegerField(default=10, verbose_name="duracion")),
                (
                    "secuencial",
                    models.BooleanField(default=False, verbose_name="secuencial"),
                ),
                (
                    "password",
                    models.CharField(
                        blank=True, max_length=300, verbose_name="password"
                    ),
                ),
                ("fecha_visible", models.DateTimeField(verbose_name="fecha_visible")),
                ("fecha_apertura", models.DateTimeField(verbose_name="fecha_apertura")),
                ("fecha_cierre", models.DateTimeField(verbose_name="fecha_cierre")),
                ("aleatorizar", models.BooleanField(default=False)),
                (
                    "asignatura",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="api.asignatura"
                    ),
                ),
            ],
            options={
                "ordering": ["titulo"],
            },
        ),
        migrations.CreateModel(
            name="InstanciaPregunta",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("orden", models.PositiveSmallIntegerField()),
            ],
            options={
                "ordering": ["pregunta"],
            },
        ),
        migrations.CreateModel(
            name="OpcionTest",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "opcion",
                    models.CharField(blank=True, max_length=254, verbose_name="opcion"),
                ),
                ("orden", models.PositiveSmallIntegerField()),
                ("fijar", models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name="Pregunta",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "pregunta",
                    models.CharField(
                        blank=True, max_length=254, verbose_name="enunciado"
                    ),
                ),
                (
                    "titulo",
                    models.CharField(blank=True, max_length=254, verbose_name="titulo"),
                ),
                (
                    "asignatura",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="api.asignatura"
                    ),
                ),
            ],
            options={
                "ordering": ["pregunta"],
            },
        ),
        migrations.CreateModel(
            name="InstanciaPreguntaText",
            fields=[
                (
                    "instanciapregunta_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="api.instanciapregunta",
                    ),
                ),
                (
                    "respuesta",
                    models.CharField(
                        blank=True, max_length=254, null=True, verbose_name="respuesta"
                    ),
                ),
            ],
            bases=("api.instanciapregunta",),
        ),
        migrations.CreateModel(
            name="PreguntaText",
            fields=[
                (
                    "pregunta_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="api.pregunta",
                    ),
                ),
                ("respuesta", models.TextField()),
            ],
            bases=("api.pregunta",),
        ),
        migrations.CreateModel(
            name="PreguntaCuestionario",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "puntosAcierto",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=30,
                        verbose_name="puntosAcierto",
                    ),
                ),
                (
                    "puntosFallo",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=30,
                        verbose_name="puntosFallo",
                    ),
                ),
                ("orden", models.PositiveSmallIntegerField()),
                ("fijar", models.BooleanField(default=False)),
                (
                    "cuestionario",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="api.cuestionario",
                    ),
                ),
                (
                    "pregunta",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="preguntas",
                        to="api.pregunta",
                    ),
                ),
            ],
            options={
                "ordering": ["pregunta"],
                "unique_together": {("pregunta", "cuestionario")},
            },
        ),
        migrations.CreateModel(
            name="Intento",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "nota",
                    models.DecimalField(
                        decimal_places=2, default=0, max_digits=10, verbose_name="nota"
                    ),
                ),
                (
                    "hash",
                    models.CharField(blank=True, max_length=254, verbose_name="hash"),
                ),
                (
                    "hash_offline",
                    models.CharField(
                        blank=True, max_length=254, verbose_name="hash_offline"
                    ),
                ),
                (
                    "fecha_inicio",
                    models.DateTimeField(null=True, verbose_name="fecha_inicio"),
                ),
                (
                    "fecha_fin",
                    models.DateTimeField(null=True, verbose_name="fecha_fin"),
                ),
                (
                    "estado",
                    models.CharField(
                        choices=[("PEN", "Pendiente"), ("ENT", "Entregado")],
                        default="PEN",
                        max_length=3,
                    ),
                ),
                (
                    "cuestionario",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="api.cuestionario",
                    ),
                ),
                (
                    "usuario",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "unique_together": {("usuario", "cuestionario")},
            },
        ),
        migrations.AddField(
            model_name="instanciapregunta",
            name="intento",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="api.intento"
            ),
        ),
        migrations.AddField(
            model_name="instanciapregunta",
            name="pregunta",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="api.pregunta"
            ),
        ),
        migrations.AddField(
            model_name="cuestionario",
            name="preguntas",
            field=models.ManyToManyField(
                through="api.PreguntaCuestionario", to="api.pregunta"
            ),
        ),
        migrations.AddField(
            model_name="cuestionario",
            name="profesor",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL
            ),
        ),
        migrations.CreateModel(
            name="PreguntaTest",
            fields=[
                (
                    "pregunta_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="api.pregunta",
                    ),
                ),
                (
                    "respuesta",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="api.opciontest",
                    ),
                ),
            ],
            bases=("api.pregunta",),
        ),
        migrations.AddField(
            model_name="opciontest",
            name="pregunta",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="opciones_test",
                to="api.preguntatest",
            ),
        ),
        migrations.CreateModel(
            name="InstanciaPreguntaTest",
            fields=[
                (
                    "instanciapregunta_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="api.instanciapregunta",
                    ),
                ),
                (
                    "respuesta",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="api.opciontest",
                    ),
                ),
            ],
            bases=("api.instanciapregunta",),
        ),
        migrations.CreateModel(
            name="InstanciaOpcionTest",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("orden", models.PositiveSmallIntegerField()),
                (
                    "respuesta",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="api.opciontest",
                    ),
                ),
                (
                    "instancia",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="api.instanciapreguntatest",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Imparte",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "asignatura",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="api.asignatura"
                    ),
                ),
                (
                    "profesor",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "unique_together": {("profesor", "asignatura")},
            },
        ),
        migrations.CreateModel(
            name="Cursa",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "alumno",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "asignatura",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="api.asignatura"
                    ),
                ),
            ],
            options={
                "unique_together": {("alumno", "asignatura")},
            },
        ),
        migrations.AlterUniqueTogether(
            name="cuestionario",
            unique_together={("asignatura", "titulo")},
        ),
        migrations.AlterUniqueTogether(
            name="opciontest",
            unique_together={("pregunta", "opcion")},
        ),
    ]
